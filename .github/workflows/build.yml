#This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the dev branch
on:
  push:
    branches: [deploy]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1' # The Go version to download (if necessary) and use.

      - uses: oleksiyrudenko/gha-git-credentials@v1
        with:
          name: '[github-action]'
          email: ''
          token: '${{ secrets.GITHUB_TOKEN  }}'

      # Setup Java environment in order to build the Android app.
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      # Setup the flutter environment.
      # - uses: geowatson/flutter-latest@1.0.0

      - uses: actions/setup-ruby@v1 
        with: 
          ruby-version: '2.7.1'

      - run: go get -u github.com/git-chglog/git-chglog/cmd/git-chglog      
      
      - shell: bash
        env:
          KEY_STORE_PASSWORD: '${{ secrets.KEY_STORE_PASSWORD }}'
          KEY_PASSWORD: '${{ secrets.KEY_PASSWORD }}'
          ALIAS: '${{ secrets.ALIAS }}'
          STORE_FILE: '${{ secrets.STORE_FILE }}'
          SIGNING_KEY: '${{ secrets.SIGNING_KEY }}'
          GH_TOKEN: '${{ secrets.GH_TOKEN }}'
          PLAY_STORE_KEY: '${{ secrets.PLAY_STORE_KEY }}'
        run: |
          mkdir .keys
          printf "storePassword=${KEY_STORE_PASSWORD}\nkeyPassword=${KEY_PASSWORD}\nkeyAlias=${ALIAS}\nstoreFile=${STORE_FILE}\n" > ./android/key.properties
          printf "GITHUB_TOKEN=${GH_TOKEN}" > .env
          echo $SIGNING_KEY | base64 -d > .keys/key.jks
          echo $PLAY_STORE_KEY | base64 -d > .keys/playstore-key.json

      #You may pin to the exact commit or the version.
      #uses: maierj/fastlane-action@0eb8533f3529b655a335d7aa695b4d027fe5cc17 teste22
      - uses: maierj/fastlane-action@v1.4.0
        with:
          # The lane that should be executed.
          lane: internal
          # The relative path from the project root directory to the subdirectory where the fastlane folder is located.
          # The directory where Ruby gems should be installed to and cached. If a relative path is specified, it's applied relative to the location of the Gemfile, which is either the project root or the directory from the `subdirectory` parameter.
          bundle-install-path: .gemscache


